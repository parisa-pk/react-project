{"ast":null,"code":"var _jsxFileName = \"F:\\\\new react\\\\test\\\\src\\\\SearchPosts.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Outlet, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchPosts() {\n  _s();\n\n  const {\n    query\n  } = useParams();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const foundPosts = []; // ✌️✌️✌️✌️\n\n    fetch(\"https://jsonplaceholder.typicode.com/posts\").then(res => res.json()).then(res => {\n      for (const post of res) {\n        if (post.title.includes(query) || post.body.includes(query)) {\n          foundPosts.push({\n            id: post.id,\n            title: post.title.replace(new RegExp(`${query}`, 'g'), `<mark>${query}</mark>`),\n            body: post.body.replace(new RegExp(`${query}`, 'g'), `<mark>${query}</mark>`)\n          });\n        }\n      }\n\n      setPosts(foundPosts);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Posts Result Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        dangerouslySetInnerHTML: {\n          __html: post.title\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        dangerouslySetInnerHTML: {\n          __html: post.body\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 70\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 32\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchPosts, \"jkLBo68KVMUHYQDCYr8cjqeYIyk=\", false, function () {\n  return [useParams];\n});\n\n_c = SearchPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPosts\");","map":{"version":3,"sources":["F:/new react/test/src/SearchPosts.js"],"names":["useEffect","useState","Outlet","useParams","SearchPosts","query","posts","setPosts","foundPosts","fetch","then","res","json","post","title","includes","body","push","id","replace","RegExp","map","__html"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,kBAAlC;;AAEA,eAAe,SAASC,WAAT,GAAsB;AAAA;;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAYF,SAAS,EAA3B;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMQ,UAAU,GAAG,EAAnB,CADU,CAEV;;AAEAC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CAAoDC,IAApD,CAA0DC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAlE,EAA8EF,IAA9E,CAAoFC,GAAD,IAAO;AACtF,WAAI,MAAME,IAAV,IAAkBF,GAAlB,EAAsB;AAClB,YAAGE,IAAI,CAACC,KAAL,CAAWC,QAAX,CAAoBV,KAApB,KAA8BQ,IAAI,CAACG,IAAL,CAAUD,QAAV,CAAmBV,KAAnB,CAAjC,EAA4D;AACxDG,UAAAA,UAAU,CAACS,IAAX,CAAgB;AACZC,YAAAA,EAAE,EAAEL,IAAI,CAACK,EADG;AAEZJ,YAAAA,KAAK,EAAED,IAAI,CAACC,KAAL,CAAWK,OAAX,CAAmB,IAAIC,MAAJ,CAAY,GAAEf,KAAM,EAApB,EAAuB,GAAvB,CAAnB,EAAiD,SAAQA,KAAM,SAA/D,CAFK;AAGZW,YAAAA,IAAI,EAAEH,IAAI,CAACG,IAAL,CAAUG,OAAV,CAAkB,IAAIC,MAAJ,CAAY,GAAEf,KAAM,EAApB,EAAuB,GAAvB,CAAlB,EAAgD,SAAQA,KAAM,SAA9D;AAHM,WAAhB;AAKH;AACJ;;AAEDE,MAAAA,QAAQ,CAACC,UAAD,CAAR;AACH,KAZD;AAaH,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAIKF,KAAK,CAACe,GAAN,CAAWR,IAAD,iBAAQ;AAAA,8BACf;AAAI,QAAA,uBAAuB,EAAE;AAACS,UAAAA,MAAM,EAAET,IAAI,CAACC;AAAd;AAA7B;AAAA;AAAA;AAAA;AAAA,cADe,eACsC;AAAG,QAAA,uBAAuB,EAAE;AAACQ,UAAAA,MAAM,EAAET,IAAI,CAACG;AAAd;AAA5B;AAAA;AAAA;AAAA;AAAA,cADtC;AAAA,OAAUH,IAAI,CAACK,EAAf;AAAA;AAAA;AAAA;AAAA,YAAlB,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAjCuBd,W;UACFD,S;;;KADEC,W","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Outlet, useParams } from \"react-router-dom\";\r\n\r\nexport default function SearchPosts(){\r\n    const { query } = useParams();\r\n    const [posts, setPosts] = useState([])\r\n\r\n    useEffect(()=>{\r\n        const foundPosts = [];\r\n        // ✌️✌️✌️✌️\r\n\r\n        fetch(\"https://jsonplaceholder.typicode.com/posts\").then((res) => res.json()).then((res)=>{\r\n            for(const post of res){\r\n                if(post.title.includes(query) || post.body.includes(query)) {\r\n                    foundPosts.push({\r\n                        id: post.id,\r\n                        title: post.title.replace(new RegExp(`${query}`, 'g'), `<mark>${query}</mark>`),\r\n                        body: post.body.replace(new RegExp(`${query}`, 'g'), `<mark>${query}</mark>`)\r\n                    });\r\n                }\r\n            }\r\n\r\n            setPosts(foundPosts)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h2>\r\n                Posts Result Page\r\n            </h2>\r\n            {posts.map((post)=><div key={post.id}>\r\n                <h3 dangerouslySetInnerHTML={{__html: post.title}} /><p dangerouslySetInnerHTML={{__html: post.body}} />\r\n            </div>)}\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}